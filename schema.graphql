# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type _Embed {
  author: EmbedAuthor
  color: Float
  description: String
  fields: [EmbedField!]
  footer: EmbedFooter
  image: EmbedImage
  thumbnail: EmbedImage
  timestamp: Boolean
  title: String
  url: String
}

input _EmbedInput {
  author: EmbedAuthorInput
  color: Float
  description: String
  fields: [EmbedFieldInput!]
  footer: EmbedFooterInput
  image: EmbedImageInput
  thumbnail: EmbedImageInput
  timestamp: Boolean
  title: String
  url: String
}

type AbstractGuild {
  features: [String!]
  icon: String
  id: ID!
  name: String!
  owner: Boolean
  permissions: Float
}

type Channel {
  id: ID!
  name: String!
  nsfw: Boolean
  parent_id: String
  position: Float!
  type: Float!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Embed {
  content: String
  embeds: [_Embed!]
  guild_id: String!
  type: String!
}

type EmbedAuthor {
  icon_url: String
  name: String!
  proxy_icon_url: String
  url: String
}

input EmbedAuthorInput {
  icon_url: String
  name: String!
  proxy_icon_url: String
  url: String
}

type EmbedField {
  inline: Boolean
  name: String!
  value: String!
}

input EmbedFieldInput {
  inline: Boolean
  name: String!
  value: String!
}

type EmbedFooter {
  icon_url: String
  proxy_icon_url: String
  text: String!
}

input EmbedFooterInput {
  icon_url: String
  proxy_icon_url: String
  text: String!
}

type EmbedImage {
  height: Float
  proxy_url: String
  url: String!
  width: Float
}

input EmbedImageInput {
  height: Float
  proxy_url: String
  url: String!
  width: Float
}

input EmbedInput {
  content: String
  embeds: [_EmbedInput!]
}

type Guild {
  banner: String
  channels: [Channel!]!
  features: [String!]
  icon: String
  id: ID!
  name: String!
  owner_id: String!
  roles: [Role!]!
}

type GuildPermissions {
  id: ID!
  permissions: Float!
  type: String!
}

input GuildPermissionsInput {
  id: ID!
  permissions: Float!
  type: String!
}

type GuildSettings {
  features: [String!]!
  id: ID!
  modlogs_channel: String
  punishments_channel: String
}

input GuildSettingsInput {
  features: [String!]
  modlogs_channel: String
  punishments_channel: String
}

type Mutation {
  DeleteGuildEmbed(id: String!, type: String!): Boolean!
  ModifyGuildEmbed(data: EmbedInput!, id: String!, type: String!): Embed!
  ModifyGuildModerationSettings(data: GuildSettingsInput!, id: String!): GuildSettings!
  ModifyGuildPermissions(data: [GuildPermissionsInput!]!, id: String!): [GuildPermissions!]!
  ModifyGuildReasons(data: [ReasonInput!]!, id: String!): [Reason!]!
}

type Punishment {
  author: User!
  created_at: DateTime!
  deleted: Boolean!
  duration: Float
  flags: Float!
  guild: AbstractGuild!
  id: ID!
  reason: String
  type: String!
  user: User!
}

type Query {
  CurrentUser: User!
  CurrentUserGuilds(filter: Boolean): [AbstractGuild!]!
  Guild(id: String!): Guild!
  GuildEmbeds(id: String!, type: String): [Embed!]
  GuildReasons(id: String!): [Reason!]!
  ping(message: String!): String!
  Punishments(after: DateTime, author_id: String, before: DateTime, type: String, user_id: String): [Punishment!]!
}

type Reason {
  days: Float
  duration: Float
  guild_id: String
  id: ID!
  keys: [String!]!
  text: String!
  types: [String!]
}

input ReasonInput {
  days: Float
  duration: Float
  id: Float
  keys: [String!]!
  text: String!
  types: [String!]
}

type Role {
  color: Float!
  hoist: Boolean!
  id: ID!
  managed: Boolean!
  mentionable: Boolean!
  name: String!
  permissions: String!
  position: Float!
}

type User {
  accent_color: Float
  avatar: String!
  banner: String
  banner_color: String
  discriminator: String!
  email: String
  flags: Float
  id: ID!
  locale: String
  mfa_enabled: Boolean
  public_flags: Float!
  username: String!
  verified: Boolean
}
